trigger:
- main

variables:
  # Docker image and Kubernetes settings
  imageName: my-python-app
  registry: kondareddyacr.azurecr.io
  clusterName: MyAKSCluster
  resourceGroup: MyResourceGroup

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DockerInstaller@0
      displayName: Install Docker
    - script: |
        docker build -t $(registry)/$(imageName):$(Build.BuildId) .
        docker login $(registry) -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
        docker push $(registry)/$(imageName):$(Build.BuildId)
      displayName: Build and Push Docker Image

- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - job: DeployToKubernetes
    pool:
      vmImage: 'ubuntu-latest'
    steps:

  variables:
  - name: ACR_USERNAME
    value: $(ACR_USERNAME)
  - name: ACR_PASSWORD
    value: $(ACR_PASSWORD)

steps:
  - script: |
      docker login $(ACR_LOGIN_SERVER) -u $(ACR_USERNAME) -p $(ACR_PASSWORD)
      docker build -t $(ACR_LOGIN_SERVER)/my-python-app:latest .
      docker push $(ACR_LOGIN_SERVER)/my-python-app:latest

    - script: |
        az aks get-credentials --resource-group $(resourceGroup) --name $(clusterName)
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
      displayName: Deploy to AKS
